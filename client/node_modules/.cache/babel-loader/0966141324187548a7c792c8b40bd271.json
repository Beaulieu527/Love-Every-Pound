{"ast":null,"code":"import _defineProperty from \"/Users/forwardlearning/Documents/dev/love_every_pound/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightCalendar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\n\nclass WeightCalendar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        id: \"10\",\n        title: \"Event Now\",\n        start: new Date()\n      }]\n    };\n\n    this.handleDateClick = arg => {\n      if (confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          calendarEvents: this.state.calendarEvents.concat({\n            // creates a new array\n            title: \"160 lb\",\n            start: arg.date,\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"demo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"demo-app-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: \"prev,next\",\n        center: \"title\",\n        right: \"dayGridMonth\"\n      },\n      plugins: [dayGridPlugin, interactionPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: this.state.calendarEvents,\n      dateClick: this.handleDateClick,\n      eventColor: \"#000000\",\n      eventClick: function (info) {\n        alert(\"Event: \" + info.event.id);\n        let _info$event = info.event,\n            title = _info$event.title,\n            id = _info$event.id,\n            start = _info$event.start;\n        console.log(\"\".concat(title, \" - \").concat(id, \" - \").concat(start, \" \"));\n        let events = this.state.calendarEvents.filter(event => event.id !== id);\n        events.push({\n          id: id,\n          title: \"160\",\n          date: start\n        });\n        this.setState(_objectSpread({}, this.state, {\n          calendarEvents: events\n        })); // change the border color just for fun\n\n        info.el.style.borderColor = \"red\";\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default WeightCalendar; // import \"./styles.css\";","map":{"version":3,"sources":["/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightCalendar.js"],"names":["React","Component","FullCalendar","dayGridPlugin","interactionPlugin","WeightCalendar","calendarComponentRef","createRef","state","calendarWeekends","calendarEvents","id","title","start","Date","handleDateClick","arg","confirm","dateStr","setState","concat","date","allDay","render","left","center","right","info","alert","event","console","log","events","filter","push","el","style","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\n\nclass WeightCalendar extends Component {\n  calendarComponentRef = React.createRef();\n\n  state = {\n    calendarWeekends: true,\n    calendarEvents: [\n      // initial event data\n      { id: \"10\", title: \"Event Now\", start: new Date() }\n    ]\n  };\n\n  render() {\n    return (\n      <div className=\"demo-app\">\n        <div className=\"demo-app-top\" />\n        <div className=\"demo-app-calendar\">\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: \"prev,next\",\n              center: \"title\",\n              right: \"dayGridMonth\"\n            }}\n            plugins={[dayGridPlugin, interactionPlugin]}\n            ref={this.calendarComponentRef}\n            weekends={this.state.calendarWeekends}\n            events={this.state.calendarEvents}\n            dateClick={this.handleDateClick}\n            eventColor=\"#000000\"\n            eventClick={function(info) {\n              alert(\"Event: \" + info.event.id);\n              let { title, id, start } = info.event;\n              console.log(`${title} - ${id} - ${start} `);\n              let events = this.state.calendarEvents.filter(\n                event => event.id !== id\n              );\n              events.push({ id: id, title: \"160\", date: start });\n              this.setState({ ...this.state, calendarEvents: events });\n\n              // change the border color just for fun\n              info.el.style.borderColor = \"red\";\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  handleDateClick = arg => {\n    if (confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n      this.setState({\n        // add new event data\n        calendarEvents: this.state.calendarEvents.concat({\n          // creates a new array\n          title: \"160 lb\",\n          start: arg.date,\n          allDay: arg.allDay\n        })\n      });\n    }\n  };\n}\n\nexport default WeightCalendar;\n\n// import \"./styles.css\";\n"]},"metadata":{},"sourceType":"module"}