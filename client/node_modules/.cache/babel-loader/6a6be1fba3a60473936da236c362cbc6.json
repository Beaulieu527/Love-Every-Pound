{"ast":null,"code":"var _jsxFileName = \"/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightChart.js\";\nimport React from \"react\";\nimport useChartConfig from 'hooks/useChartConfig';\nimport Box from 'components/Box';\nimport { Chart } from '../../../dist';\n\nconst WeightChart = () => {\n  const data = React.useMemo(() => [{\n    label: \"Series 1\",\n    data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  }, {\n    label: \"Series 2\",\n    data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  }], []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: \"linear\",\n    position: \"bottom\"\n  }, {\n    type: \"linear\",\n    position: \"left\"\n  }], []);\n  const lineChart = // A react-chart hyper-responsively and continuusly fills the available\n  // space of its parent element automatically\n  React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      height: \"300px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    data: data,\n    axes: axes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n  return lineChart;\n};\n\nexport default WeightChart;","map":{"version":3,"sources":["/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightChart.js"],"names":["React","useChartConfig","Box","Chart","WeightChart","data","useMemo","label","axes","primary","type","position","lineChart","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,IAAI,GAAGL,KAAK,CAACM,OAAN,CACX,MAAM,CACJ;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AAFR,GADI,EAKJ;AACEE,IAAAA,KAAK,EAAE,UADT;AAEEF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AAFR,GALI,CADK,EAWX,EAXW,CAAb;AAcA,QAAMG,IAAI,GAAGR,KAAK,CAACM,OAAN,CACX,MAAM,CACJ;AAAEG,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GADI,EAEJ;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFI,CADK,EAKX,EALW,CAAb;AAQA,QAAMC,SAAS,GACb;AACA;AACA;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE;AAFH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,IAAI,EAAEG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHF;AAYA,SAAOI,SAAP;AACD,CApCD;;AAsCA,eAAeR,WAAf","sourcesContent":["import React from \"react\";\nimport useChartConfig from 'hooks/useChartConfig'\nimport Box from 'components/Box'\nimport { Chart } from '../../../dist'\n\nconst WeightChart = () => {\n  const data = React.useMemo(\n    () => [\n      {\n        label: \"Series 1\",\n        data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n      },\n      {\n        label: \"Series 2\",\n        data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n      }\n    ],\n    []\n  );\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: \"linear\", position: \"bottom\" },\n      { type: \"linear\", position: \"left\" }\n    ],\n    []\n  );\n\n  const lineChart = (\n    // A react-chart hyper-responsively and continuusly fills the available\n    // space of its parent element automatically\n    <div\n      style={{\n        width: \"400px\",\n        height: \"300px\"\n      }}\n    >\n      <Chart data={data} axes={axes} />\n    </div>\n  );\n  return lineChart\n};\n\nexport default WeightChart;\n"]},"metadata":{},"sourceType":"module"}