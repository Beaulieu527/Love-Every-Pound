{"ast":null,"code":"var _jsxFileName = \"/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightChart.js\";\nimport React from \"react\";\nimport { Chart } from \"react-charts\";\n\nconst WeightChart = () => {\n  const data = React.useMemo(() => [{\n    label: \"Weight\",\n    data: [[\"day 1\", 1], [\"day 2\", 2], [\"day 3\", 4], [\"day 4\", 2], [\"day 5\", 7]]\n  }], []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: \"linear\",\n    position: \"bottom\"\n  }, {\n    type: \"linear\",\n    position: \"left\"\n  }], []);\n  const lineChart = // A react-chart hyper-responsively and continuusly fills the available\n  // space of its parent element automatically\n  React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      height: \"300px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    data: data,\n    axes: axes,\n    tooltip: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n  return lineChart;\n};\n\nexport default WeightChart;","map":{"version":3,"sources":["/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightChart.js"],"names":["React","Chart","WeightChart","data","useMemo","label","axes","primary","type","position","lineChart","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,IAAI,GAAGH,KAAK,CAACI,OAAN,CACX,MAAM,CACJ;AACEC,IAAAA,KAAK,EAAE,QADT;AAEEF,IAAAA,IAAI,EAAE,CAAC,CAAC,OAAD,EAAU,CAAV,CAAD,EAAe,CAAC,OAAD,EAAU,CAAV,CAAf,EAA6B,CAAC,OAAD,EAAU,CAAV,CAA7B,EAA2C,CAAC,OAAD,EAAU,CAAV,CAA3C,EAAyD,CAAC,OAAD,EAAU,CAAV,CAAzD;AAFR,GADI,CADK,EAOX,EAPW,CAAb;AAUA,QAAMG,IAAI,GAAGN,KAAK,CAACI,OAAN,CACX,MAAM,CACJ;AAAEG,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GADI,EAEJ;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFI,CADK,EAKX,EALW,CAAb;AAQA,QAAMC,SAAS,GACb;AACA;AACA;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE;AAFH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,IAAI,EAAEG,IAAzB;AAA+B,IAAA,OAAO,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHF;AAYA,SAAOI,SAAP;AACD,CAhCD;;AAkCA,eAAeR,WAAf","sourcesContent":["import React from \"react\";\nimport { Chart } from \"react-charts\";\n\nconst WeightChart = () => {\n  const data = React.useMemo(\n    () => [\n      {\n        label: \"Weight\",\n        data: [[\"day 1\", 1], [\"day 2\", 2], [\"day 3\", 4], [\"day 4\", 2], [\"day 5\", 7]]\n      }\n    ],\n    []\n  );\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: \"linear\", position: \"bottom\" },\n      { type: \"linear\", position: \"left\" }\n    ],\n    []\n  );\n\n  const lineChart = (\n    // A react-chart hyper-responsively and continuusly fills the available\n    // space of its parent element automatically\n    <div\n      style={{\n        width: \"400px\",\n        height: \"300px\"\n      }}\n    >\n      <Chart data={data} axes={axes} tooltip/>\n    </div>\n  );\n  return lineChart\n};\n\nexport default WeightChart;\n"]},"metadata":{},"sourceType":"module"}