{"ast":null,"code":"var _jsxFileName = \"/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightChart.js\";\nimport React from \"react\";\nimport useChartConfig from 'hooks/useChartConfig';\nimport Box from 'components/Box';\nimport { Chart } from '../../../dist';\n\nconst WeightChart = () => {\n  const _useChartConfig = useChartConfig({\n    series: 10\n  }),\n        data = _useChartConfig.data,\n        randomizeData = _useChartConfig.randomizeData;\n\n  const series = React.useMemo(() => ({\n    showPoints: false\n  }), []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'time',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: randomizeData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Randomize Data\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    data: data,\n    series: series,\n    axes: axes,\n    tooltip: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, sourceCode)));\n};\n\nexport default WeightChart;","map":{"version":3,"sources":["/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightChart.js"],"names":["React","useChartConfig","Box","Chart","WeightChart","series","data","randomizeData","useMemo","showPoints","axes","primary","type","position","sourceCode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA,0BACUH,cAAc,CAAC;AAC3CI,IAAAA,MAAM,EAAE;AADmC,GAAD,CADxB;AAAA,QACdC,IADc,mBACdA,IADc;AAAA,QACRC,aADQ,mBACRA,aADQ;;AAIpB,QAAMF,MAAM,GAAGL,KAAK,CAACQ,OAAN,CACb,OAAO;AACLC,IAAAA,UAAU,EAAE;AADP,GAAP,CADa,EAIb,EAJa,CAAf;AAMA,QAAMC,IAAI,GAAGV,KAAK,CAACQ,OAAN,CACX,MAAM,CACJ;AAAEG,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,MAAvB;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GADI,EAEJ;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFI,CADK,EAKX,EALW,CAAb;AAOA,SACE,0CACE;AAAQ,IAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,MAAM,EAAED,MAA3B;AAAmC,IAAA,IAAI,EAAEK,IAAzC;AAA+C,IAAA,OAAO,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,UAAP,CADF,CARF,CADF;AAcL,CA/BD;;AAiCA,eAAeV,WAAf","sourcesContent":["import React from \"react\";\nimport useChartConfig from 'hooks/useChartConfig'\nimport Box from 'components/Box'\nimport { Chart } from '../../../dist'\n\nconst WeightChart = () => {\n    const { data, randomizeData } = useChartConfig({\n        series: 10\n      })\n      const series = React.useMemo(\n        () => ({\n          showPoints: false\n        }),\n        []\n      )\n      const axes = React.useMemo(\n        () => [\n          { primary: true, type: 'time', position: 'bottom' },\n          { type: 'linear', position: 'left' }\n        ],\n        []\n      )\n      return (\n        <>\n          <button onClick={randomizeData}>Randomize Data</button>\n          <br />\n          <br />\n          <Box>\n            <Chart data={data} series={series} axes={axes} tooltip />\n          </Box>\n          <br />\n          <pre>\n            <code>{sourceCode}</code>\n          </pre>\n        </>\n      )\n};\n\nexport default WeightChart;\n"]},"metadata":{},"sourceType":"module"}