{"ast":null,"code":"import _slicedToArray from \"/Users/forwardlearning/Documents/dev/love_every_pound/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightDisplay.js\";\nimport React, { useState } from \"react\";\nimport WeightCalendar from \"./WeightCalendar\";\nimport WeightChart from \"./WeightChart\";\nimport { Grid, Card, Header, Segment } from \"semantic-ui-react\";\n\nconst WeightDisplay = () => {\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setDate = _useState2[1];\n\n  const handleChange = event => {\n    console.log(event);\n    setDate(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    content: \"Stackable Grid\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    columns: 2,\n    stackable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Content\")), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Content\")), React.createElement(Grid.Row, {\n    columns: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Content\")), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Content\")), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Content\"))), React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Content\")), React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Content\")))) // <Card.Group stackable={true} centered={true}>\n  //   <Card >\n  //     <div className=\"weight-chart\">\n  //       <WeightChart />\n  //     </div>\n  //   </Card>\n  //   <Card >\n  //     <WeightCalendar onChange={handleChange} value={date} />\n  //   </Card>\n  // </Card.Group>\n  // <Card fluid>\n  //     <Card.Content>\n  //   <Grid columns={2}>\n  //     <Grid.Row>\n  //       <Grid.Column width={8}>\n  //         <div className=\"weight-chart\">\n  //         <WeightChart/>\n  //         </div>\n  //       </Grid.Column>\n  //       <Grid.Column width={8}>\n  //         <WeightCalendar onChange={handleChange} value={date} />\n  //       </Grid.Column>\n  //     </Grid.Row>\n  //   </Grid>\n  //   </Card.Content>\n  // </Card>\n  ;\n};\n\nexport default WeightDisplay;","map":{"version":3,"sources":["/Users/forwardlearning/Documents/dev/love_every_pound/src/features/user/WeightDisplay.js"],"names":["React","useState","WeightCalendar","WeightChart","Grid","Card","Header","Segment","WeightDisplay","Date","date","setDate","handleChange","event","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,OAA7B,QAA4C,mBAA5C;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBACFP,QAAQ,CAAC,IAAIQ,IAAJ,EAAD,CADN;AAAA;AAAA,QACnBC,IADmB;AAAA,QACbC,OADa;;AAG1B,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAF,IAAAA,OAAO,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,OAAO,EAAC,gBAFV;AAGE,IAAA,SAAS,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,SAAS,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,EAOE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,EAOE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAPF,CAPF,EAkBE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAlBF,EAqBE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CArBF,CANF,CADF,CAiCE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DF;AA6DD,CArED;;AAuEA,eAAeT,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport WeightCalendar from \"./WeightCalendar\";\nimport WeightChart from \"./WeightChart\";\nimport { Grid, Card, Header, Segment } from \"semantic-ui-react\";\n\nconst WeightDisplay = () => {\n  const [date, setDate] = useState(new Date());\n\n  const handleChange = event => {\n    console.log(event);\n    setDate(event.target.value);\n  };\n\n  return (\n    <div>\n      <Header\n        as=\"h3\"\n        content=\"Stackable Grid\"\n        textAlign=\"center\"\n      />\n      <Grid columns={2} stackable>\n        <Grid.Column>\n          <Segment>Content</Segment>\n        </Grid.Column>\n        <Grid.Column>\n          <Segment>Content</Segment>\n        </Grid.Column>\n        <Grid.Row columns={3}>\n          <Grid.Column>\n            <Segment>Content</Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment>Content</Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment>Content</Segment>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Column width={10}>\n          <Segment>Content</Segment>\n        </Grid.Column>\n        <Grid.Column width={6}>\n          <Segment>Content</Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n    // <Card.Group stackable={true} centered={true}>\n    //   <Card >\n    //     <div className=\"weight-chart\">\n    //       <WeightChart />\n    //     </div>\n    //   </Card>\n\n    //   <Card >\n    //     <WeightCalendar onChange={handleChange} value={date} />\n    //   </Card>\n    // </Card.Group>\n    // <Card fluid>\n    //     <Card.Content>\n    //   <Grid columns={2}>\n    //     <Grid.Row>\n    //       <Grid.Column width={8}>\n    //         <div className=\"weight-chart\">\n    //         <WeightChart/>\n    //         </div>\n    //       </Grid.Column>\n    //       <Grid.Column width={8}>\n    //         <WeightCalendar onChange={handleChange} value={date} />\n    //       </Grid.Column>\n    //     </Grid.Row>\n    //   </Grid>\n    //   </Card.Content>\n    // </Card>\n  );\n};\n\nexport default WeightDisplay;\n"]},"metadata":{},"sourceType":"module"}